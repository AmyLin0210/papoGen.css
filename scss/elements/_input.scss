/*!
 * # papoGen 0.0.1 - Input
 * - Prefix: input
 */

$width: (
  default: 9rem,
  short: 9rem,
  medium: 13rem,
  long: 16rem
);

$size: (
  default: (9rem, 1rem, 0.8rem, 0.7rem),
  small: (9rem, 1rem, 0.8rem, 0.7rem),
  big: (13rem, 1.5rem, 1.2rem, 1.0rem),
  huge: (16rem, 2.5rem, 1.6rem, 1.25rem)
);

$icon-size: (
  default: (0.8rem, 0.55rem, 0.5rem),
  small: (0.8rem, 0.55rem, 0.5rem),
  big: (1.2rem, 0.56rem, 0.7rem),
  huge: (1.6rem, 0.9rem, 0.89rem)
);

$default-margin: 0.3rem 0;

$colors: (
  default: #8ea6b4,
  red: #f67280,
  orange: #ffa528,
  green: #7dc383,
  yellow: #fadc6d,
  blue: #85b7d9,
  indigo: #3a55ea,
  purple: #8142e5,
);

/* default */

.input > input {
  flex: 1 0 auto;
  border: 0.06rem #d4d4d4 solid;
  padding: 0.46rem 0.7rem;
  border-radius: 0.28rem;
  font-size: 0.8rem;
  font-family: Arial;
  text-align: left;
  outline: 0;
  width: 13rem;
  margin: $default-margin;
  box-sizing: content-box;
  &::placeholder {
    color: #d3d3d3;
    opacity: 0.9;
  } 
  &:focus::placeholder {
    color: #b1b1b1;
    opacity: 0.95;
  }
}

/* color */
@each $name, $color in $colors {
  .input.#{$name} > input:focus {
    border-color: $color;
  }
}

/* size */
@each $type, $attr in $width {
  .input.#{$type} > input {
    width: $attr; 
    
  }
}

/* size */
@each $type, $attr in $size {
  .input.#{$type} > input {
    width: nth($attr, 1);
    height: nth($attr, 2);
    font-size: nth($attr, 3);
    padding-left: nth($attr, 4);
  }
}

/* focus */
@each $name, $color in $colors {
  .input.focus.#{$name} > input {
    border-color: $color;
    &::placeholder {
      color: #b1b1b1;
      opacity: 0.9;
    } 
  }
}

/* disabled */
.input.disabled > input {
  pointer-events: none;
}
.input.disabled {
  opacity: 0.55;
}

/* error */
.input.error > input {
  border-color: map-get($colors, red);
  opacity: 0.75;
  background-color: fade-out(#ef7b7b, 0.85);
  
  &::placeholder {
    color: map-get($colors, red);
    opacity: 0.65;
  }
  &:focus::placeholder {
    color: map-get($colors, red);
    opacity: 0.9;
  }
  &:focus {
    border-color: map-get($colors, red) !important;
  }
}

/* transparent */
.input.transparent > input {
  border: none;
}

/* fluid */
.input.fluid {
  display: flex;
}

/* icon */
.icon.input > input {
  padding-left: 2em;
}

.icon.input > i {
  margin: $default-margin;
  position: absolute;
  font-size: 0.8em;
  padding: 0.55rem 0.5rem;
  color: #a3a3a3;
}

@each $type, $attr in $icon-size {
  .icon.input.#{$type} > i {
    font-size: nth($attr, 1);
    padding: nth($attr, 2)  nth($attr, 3);
  }
}
